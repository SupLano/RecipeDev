{"ast":null,"code":"import _slicedToArray from\"/Users/user/Downloads/Projects/html,css,javascript/personal/-react/fragments/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState,useEffect}from'react';function Get(_ref){var url=_ref.url,type=_ref.type;var _useState=useState({'data':null,'loading':true}),_useState2=_slicedToArray(_useState,2),reciept=_useState2[0],setReciept=_useState2[1];var savedRecipes=localStorage.getItem(\"Recipes\");useEffect(function(){switch(type){case'Homepage':if(savedRecipes){console.log(\"Reading Old Fetch\");var Recipe=JSON.parse(savedRecipes);setReciept({'data':Recipe,'loading':false});}else{console.log('Getting New Fetch For Homepage');var _response=fetch(url).then(function(res){return res.json();}).then(function(res){if(res.recipes){setReciept({'data':res.recipes,'loading':false});localStorage.setItem(\"Recipes\",JSON.stringify(res.recipes));}});}break;case\"Id\":console.log('Getting New Fetch By Recipe'+url);var res=fetch(url).then(function(res){return res.json();}).then(function(result){console.log(result);setReciept({'data':result,'loading':false});console.log(reciept);});break;case\"Page\":console.log('Getting New Fetch for Page');var response=fetch(url).then(function(res){return res.json();}).then(function(res){console.log(res);if(res.results){console.log(res.results);setReciept({'data':res.results,'loading':false});console.log(reciept);}});break;default:// code block\n}},[type,url]);return reciept;}export default Get;","map":{"version":3,"names":["useState","useEffect","Get","url","type","reciept","setReciept","savedRecipes","localStorage","getItem","console","log","Recipe","JSON","parse","response","fetch","then","res","json","recipes","setItem","stringify","result","results"],"sources":["/Users/user/Downloads/Projects/html,css,javascript/personal/-react/fragments/src/Utils/Get.js"],"sourcesContent":["import { useState, useEffect } from 'react'\n\nfunction Get({ url, type,}) {\n  const [reciept, setReciept] = useState({'data' : null, 'loading' : true})\n  const savedRecipes = localStorage.getItem(\"Recipes\");\n\n  useEffect( () =>  {       \n                            switch(type) {\n                                case 'Homepage':\n                                    if (savedRecipes) \n                                    { \n                                                    console.log(\"Reading Old Fetch\")\n                                                    const Recipe = JSON.parse(savedRecipes);                            \n                                                    setReciept({'data': Recipe, 'loading': false})\n                                    }\n            \n                                    else \n                                    {\n                                         \n                                            console.log('Getting New Fetch For Homepage')\n                                            const response = fetch(url) \n                                            .then( res=> res.json()  )\n                                            .then(\n                                                res=>\n                                                {\n                                                if (res.recipes){\n                                                    setReciept({'data': res.recipes, 'loading': false})\n                                                    localStorage.setItem(\"Recipes\", JSON.stringify(res.recipes))\n                                                }\n                                                }\n                                            )\n                                         \n                                            \n                                    }    \n                                            \n                                break;\n\n                                case \"Id\":\n                                      \n                                        console.log('Getting New Fetch By Recipe' + url )\n                                        const res = fetch(url) \n                                        .then( res=> res.json() )\n                                        .then(\n                                            result=>\n                                            {    \n                                                console.log(result)                                            \n                                                setReciept({'data': result,'loading': false})\n                                                console.log(reciept);                                                    \n                                            }\n                                        )\n                                        \n                                        \n                                      \n                                break;\n    \n                                case \"Page\":\n                                \n                                        console.log('Getting New Fetch for Page')\n                                        const response = fetch(url) \n                                        .then( res=> res.json()  )\n                                        .then(\n                                            res=>\n                                            {\n                                                console.log(res)\n                                            if (res.results){\n                                                console.log(res.results)\n                                                setReciept({'data': res.results, 'loading': false})\n                                                console.log(reciept);\n                                            }\n                                            }\n                                        )\n                                    \n\n                                break;\n                                default:\n                                // code block\n                            }\n                        \n                            \n            \n  }, [type,url])\n  \n  return reciept\n}\n\n\n\nexport default Get"],"mappings":"kKAAA,OAASA,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAE3C,QAASC,IAAG,MAAgB,IAAbC,IAAG,MAAHA,GAAG,CAAEC,IAAI,MAAJA,IAAI,CACtB,cAA8BJ,QAAQ,CAAC,CAAC,MAAM,CAAG,IAAI,CAAE,SAAS,CAAG,IAAI,CAAC,CAAC,wCAAlEK,OAAO,eAAEC,UAAU,eAC1B,GAAMC,aAAY,CAAGC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC,CAEpDR,SAAS,CAAE,UAAO,CACQ,OAAOG,IAAI,EACP,IAAK,UAAU,CACX,GAAIG,YAAY,CAChB,CACgBG,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC,CAChC,GAAMC,OAAM,CAAGC,IAAI,CAACC,KAAK,CAACP,YAAY,CAAC,CACvCD,UAAU,CAAC,CAAC,MAAM,CAAEM,MAAM,CAAE,SAAS,CAAE,KAAK,CAAC,CAAC,CAC9D,CAAC,IAGD,CAEQF,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC,CAC7C,GAAMI,UAAQ,CAAGC,KAAK,CAACb,GAAG,CAAC,CAC1Bc,IAAI,CAAE,SAAAC,GAAG,QAAGA,IAAG,CAACC,IAAI,EAAE,GAAG,CACzBF,IAAI,CACD,SAAAC,GAAG,CACH,CACA,GAAIA,GAAG,CAACE,OAAO,CAAC,CACZd,UAAU,CAAC,CAAC,MAAM,CAAEY,GAAG,CAACE,OAAO,CAAE,SAAS,CAAE,KAAK,CAAC,CAAC,CACnDZ,YAAY,CAACa,OAAO,CAAC,SAAS,CAAER,IAAI,CAACS,SAAS,CAACJ,GAAG,CAACE,OAAO,CAAC,CAAC,CAChE,CACA,CAAC,CACJ,CAGT,CAEJ,MAEA,IAAK,IAAI,CAEDV,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAGR,GAAG,CAAE,CACjD,GAAMe,IAAG,CAAGF,KAAK,CAACb,GAAG,CAAC,CACrBc,IAAI,CAAE,SAAAC,GAAG,QAAGA,IAAG,CAACC,IAAI,EAAE,GAAE,CACxBF,IAAI,CACD,SAAAM,MAAM,CACN,CACIb,OAAO,CAACC,GAAG,CAACY,MAAM,CAAC,CACnBjB,UAAU,CAAC,CAAC,MAAM,CAAEiB,MAAM,CAAC,SAAS,CAAE,KAAK,CAAC,CAAC,CAC7Cb,OAAO,CAACC,GAAG,CAACN,OAAO,CAAC,CACxB,CAAC,CACJ,CAIT,MAEA,IAAK,MAAM,CAEHK,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC,CACzC,GAAMI,SAAQ,CAAGC,KAAK,CAACb,GAAG,CAAC,CAC1Bc,IAAI,CAAE,SAAAC,GAAG,QAAGA,IAAG,CAACC,IAAI,EAAE,GAAG,CACzBF,IAAI,CACD,SAAAC,GAAG,CACH,CACIR,OAAO,CAACC,GAAG,CAACO,GAAG,CAAC,CACpB,GAAIA,GAAG,CAACM,OAAO,CAAC,CACZd,OAAO,CAACC,GAAG,CAACO,GAAG,CAACM,OAAO,CAAC,CACxBlB,UAAU,CAAC,CAAC,MAAM,CAAEY,GAAG,CAACM,OAAO,CAAE,SAAS,CAAE,KAAK,CAAC,CAAC,CACnDd,OAAO,CAACC,GAAG,CAACN,OAAO,CAAC,CACxB,CACA,CAAC,CACJ,CAGT,MACA,QACA;AAAA,CAK9B,CAAC,CAAE,CAACD,IAAI,CAACD,GAAG,CAAC,CAAC,CAEd,MAAOE,QAAO,CAChB,CAIA,cAAeH,IAAG"},"metadata":{},"sourceType":"module"}