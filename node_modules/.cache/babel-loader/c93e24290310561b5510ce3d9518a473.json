{"ast":null,"code":"var _jsxFileName = \"/Users/user/Downloads/Projects/html,css,javascript/personal/-react/fragments/src/Recipes.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport RecipeCard from './RecipeCard';\nimport Loading from './Loading';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Recipes() {\n  _s();\n  const [recipes, setRecipes] = useState([]);\n  const [LoadingRecipes, SetLoadingRecipes] = useState(true);\n  useEffect(() => {\n    const FetchRecipes = async function () {\n      const saveRecipes = localStorage.getItem(recipes);\n      if (saveRecipes) {\n        setRecipes(saveRecipes);\n      } else {\n        let response = await fetch(`https://api.spoonaular.com/recipes/random?number=1500&apiKey=b996787c904f49ba9142544aa5832a3e`);\n        let result = await response.json().then(res => {\n          if (res.status === 'failure') {\n            console.log(res.status);\n          } else setRecipes(res.recipes);\n        }).catch(() => {\n          console.log(\"error\");\n        });\n      }\n      FetchRecipes();\n    };\n  }, []);\n  useEffect(() => {\n    if (recipes.length > 1) {\n      SetLoadingRecipes(false);\n    }\n  }, [recipes]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: '',\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: '',\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: 'row row-cols-3 g-2',\n        children: LoadingRecipes ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 37\n        }, this) : recipes.map(rec => {\n          return /*#__PURE__*/_jsxDEV(RecipeCard, {\n            title: rec.title,\n            summary: rec.summary,\n            cheap: rec.cheap,\n            diets: rec.diets,\n            image: rec.image\n          }, rec.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 31\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(Recipes, \"RdB6b+7oigdirnunu6faehBAvww=\");\n_c = Recipes;\nexport default Recipes;\nvar _c;\n$RefreshReg$(_c, \"Recipes\");","map":{"version":3,"names":["React","useEffect","useState","RecipeCard","Loading","Recipes","recipes","setRecipes","LoadingRecipes","SetLoadingRecipes","FetchRecipes","saveRecipes","localStorage","getItem","response","fetch","result","json","then","res","status","console","log","catch","length","map","rec","title","summary","cheap","diets","image","id"],"sources":["/Users/user/Downloads/Projects/html,css,javascript/personal/-react/fragments/src/Recipes.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport RecipeCard from './RecipeCard';\nimport Loading from './Loading';\n\nfunction Recipes() \n{\n\n  const [recipes, setRecipes] = useState([]);\n  const [LoadingRecipes, SetLoadingRecipes] = useState(true);\n\n  useEffect( ()=> { \n    const FetchRecipes = async function () {\n      const saveRecipes = localStorage.getItem(recipes);\n      if (saveRecipes) {\n      setRecipes(saveRecipes);\n      }\n      else {\n          let response = await fetch(`https://api.spoonaular.com/recipes/random?number=1500&apiKey=b996787c904f49ba9142544aa5832a3e`);\n          let result =  await response.json().then( res => {\n              if (res.status === 'failure'){\n                console.log(res.status);\n              }\n              else\n              setRecipes(res.recipes);\n          } )\n          .catch(() => {\n            console.log(\"error\")\n          })\n        }  \n        FetchRecipes()\n      }\n\n  }, []);\n\n  useEffect( ()=>{\n    if (recipes.length > 1){\n      SetLoadingRecipes(false);\n      }\n  }, [recipes])\n\n \n  return (\n    <div className={''}>\n      <div className={''}>\n          <div className={'row row-cols-3 g-2'}>\n              {\n                  LoadingRecipes  ? <Loading/> : recipes.map( rec => {\n                      return (\n                              <RecipeCard key={rec.id} title={rec.title} summary={rec.summary} cheap={rec.cheap} diets={rec.diets} image={rec.image} />\n                      )\n                    }\n                  )\n              } \n            </div>\n      </div>\n    </div>\n  )\n}\n\n\n\nexport default Recipes"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,OAAO,MAAM,WAAW;AAAC;AAEhC,SAASC,OAAO,GAChB;EAAA;EAEE,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACM,cAAc,EAAEC,iBAAiB,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAE1DD,SAAS,CAAE,MAAK;IACd,MAAMS,YAAY,GAAG,kBAAkB;MACrC,MAAMC,WAAW,GAAGC,YAAY,CAACC,OAAO,CAACP,OAAO,CAAC;MACjD,IAAIK,WAAW,EAAE;QACjBJ,UAAU,CAACI,WAAW,CAAC;MACvB,CAAC,MACI;QACD,IAAIG,QAAQ,GAAG,MAAMC,KAAK,CAAE,+FAA8F,CAAC;QAC3H,IAAIC,MAAM,GAAI,MAAMF,QAAQ,CAACG,IAAI,EAAE,CAACC,IAAI,CAAEC,GAAG,IAAI;UAC7C,IAAIA,GAAG,CAACC,MAAM,KAAK,SAAS,EAAC;YAC3BC,OAAO,CAACC,GAAG,CAACH,GAAG,CAACC,MAAM,CAAC;UACzB,CAAC,MAEDb,UAAU,CAACY,GAAG,CAACb,OAAO,CAAC;QAC3B,CAAC,CAAE,CACFiB,KAAK,CAAC,MAAM;UACXF,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;QACtB,CAAC,CAAC;MACJ;MACAZ,YAAY,EAAE;IAChB,CAAC;EAEL,CAAC,EAAE,EAAE,CAAC;EAENT,SAAS,CAAE,MAAI;IACb,IAAIK,OAAO,CAACkB,MAAM,GAAG,CAAC,EAAC;MACrBf,iBAAiB,CAAC,KAAK,CAAC;IACxB;EACJ,CAAC,EAAE,CAACH,OAAO,CAAC,CAAC;EAGb,oBACE;IAAK,SAAS,EAAE,EAAG;IAAA,uBACjB;MAAK,SAAS,EAAE,EAAG;MAAA,uBACf;QAAK,SAAS,EAAE,oBAAqB;QAAA,UAE7BE,cAAc,gBAAI,QAAC,OAAO;UAAA;UAAA;UAAA;QAAA,QAAE,GAAGF,OAAO,CAACmB,GAAG,CAAEC,GAAG,IAAI;UAC/C,oBACQ,QAAC,UAAU;YAAc,KAAK,EAAEA,GAAG,CAACC,KAAM;YAAC,OAAO,EAAED,GAAG,CAACE,OAAQ;YAAC,KAAK,EAAEF,GAAG,CAACG,KAAM;YAAC,KAAK,EAAEH,GAAG,CAACI,KAAM;YAAC,KAAK,EAAEJ,GAAG,CAACK;UAAM,GAArGL,GAAG,CAACM,EAAE;YAAA;YAAA;YAAA;UAAA,QAAkG;QAEnI,CAAC;MACF;QAAA;QAAA;QAAA;MAAA;IAED;MAAA;MAAA;MAAA;IAAA;EACN;IAAA;IAAA;IAAA;EAAA,QACF;AAEV;AAAC,GArDQ3B,OAAO;AAAA,KAAPA,OAAO;AAyDhB,eAAeA,OAAO;AAAA;AAAA"},"metadata":{},"sourceType":"module"}