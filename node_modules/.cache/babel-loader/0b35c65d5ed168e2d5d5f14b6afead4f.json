{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nfunction useFetch(url) {\n  _s();\n  const [reciept, setReciept] = useState({\n    'data': null,\n    'loading': true\n  });\n  const savedRecipes = localStorage.getItem(\"Recipes\");\n  useEffect(() => {\n    if (savedRecipes) {\n      const savedRecipe = saved;\n      console.log(savedRecipe);\n      setReciept({\n        'data': JSON.parse(savedRecipes),\n        'loading': false\n      });\n    } else {\n      const response = fetch(url).then(response => response.json()).then(response => {\n        console.log(response);\n        if (response.ok && response.ok === 'false') {\n          setReciept({\n            'data': 'failure',\n            'loading': true\n          });\n        } else {\n          localStorage.setItem('Recipes', JSON.stringify(response.recipes));\n          setReciept({\n            'data': response.recipes,\n            'loading': false\n          });\n        }\n      });\n    }\n  }, [url, savedRecipes]);\n  return reciept;\n}\n_s(useFetch, \"kTcyT6UT5EI4N3cnLUEg2oPfyLg=\");\nexport default useFetch;","map":{"version":3,"names":["useState","useEffect","useFetch","url","reciept","setReciept","savedRecipes","localStorage","getItem","savedRecipe","saved","console","log","JSON","parse","response","fetch","then","json","ok","setItem","stringify","recipes"],"sources":["/Users/user/Downloads/Projects/html,css,javascript/personal/-react/fragments/src/Utils/Fetch.js"],"sourcesContent":["import { useState, useEffect } from 'react'\n\nfunction useFetch(url) {\n  const [reciept, setReciept] = useState({'data' : null, 'loading' : true})\n  const savedRecipes = localStorage.getItem(\"Recipes\");\n\n  useEffect( () =>  {       \n           \n                        if (savedRecipes) {\n                            const savedRecipe = saved\n                            console.log(savedRecipe);\n                            setReciept({'data':JSON.parse(savedRecipes), 'loading': false})\n                           \n                            }\n  \n                        else \n                            {\n                                const response =  fetch(url).then( response => response.json()).then(( response )=> \n                                {\n                                    console.log(response);\n                                    if (response.ok && response.ok === 'false'){\n                                        setReciept({'data' : 'failure', 'loading' : true})\n                                    }\n\n                                    else {\n                                        localStorage.setItem('Recipes', JSON.stringify(response.recipes))\n                                        setReciept({'data': response.recipes, 'loading': false})\n                                    }\n\n                                })\n                            }\n    \n  }, [url, savedRecipes])\n\n  return reciept\n\n}\n\nexport default useFetch"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,SAASC,QAAQ,CAACC,GAAG,EAAE;EAAA;EACrB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGL,QAAQ,CAAC;IAAC,MAAM,EAAG,IAAI;IAAE,SAAS,EAAG;EAAI,CAAC,CAAC;EACzE,MAAMM,YAAY,GAAGC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC;EAEpDP,SAAS,CAAE,MAAO;IAEI,IAAIK,YAAY,EAAE;MACd,MAAMG,WAAW,GAAGC,KAAK;MACzBC,OAAO,CAACC,GAAG,CAACH,WAAW,CAAC;MACxBJ,UAAU,CAAC;QAAC,MAAM,EAACQ,IAAI,CAACC,KAAK,CAACR,YAAY,CAAC;QAAE,SAAS,EAAE;MAAK,CAAC,CAAC;IAE/D,CAAC,MAGD;MACI,MAAMS,QAAQ,GAAIC,KAAK,CAACb,GAAG,CAAC,CAACc,IAAI,CAAEF,QAAQ,IAAIA,QAAQ,CAACG,IAAI,EAAE,CAAC,CAACD,IAAI,CAAGF,QAAQ,IAC/E;QACIJ,OAAO,CAACC,GAAG,CAACG,QAAQ,CAAC;QACrB,IAAIA,QAAQ,CAACI,EAAE,IAAIJ,QAAQ,CAACI,EAAE,KAAK,OAAO,EAAC;UACvCd,UAAU,CAAC;YAAC,MAAM,EAAG,SAAS;YAAE,SAAS,EAAG;UAAI,CAAC,CAAC;QACtD,CAAC,MAEI;UACDE,YAAY,CAACa,OAAO,CAAC,SAAS,EAAEP,IAAI,CAACQ,SAAS,CAACN,QAAQ,CAACO,OAAO,CAAC,CAAC;UACjEjB,UAAU,CAAC;YAAC,MAAM,EAAEU,QAAQ,CAACO,OAAO;YAAE,SAAS,EAAE;UAAK,CAAC,CAAC;QAC5D;MAEJ,CAAC,CAAC;IACN;EAE1B,CAAC,EAAE,CAACnB,GAAG,EAAEG,YAAY,CAAC,CAAC;EAEvB,OAAOF,OAAO;AAEhB;AAAC,GAlCQF,QAAQ;AAoCjB,eAAeA,QAAQ"},"metadata":{},"sourceType":"module"}