{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nfunction useFetches(_ref) {\n  _s();\n  let {\n    url\n  } = _ref;\n  //   const [reciept, setReciept] = useState({'data' : null, 'loading' : true})\n  const savedRecipes = localStorage.getItem(\"Recipes\");\n  const data = 'man';\n  useEffect(() => {\n    console.log(url + data);\n    // if (savedRecipes) { \n    //     const savedRecipe = JSON.parse(savedRecipes);\n    //     console.log(savedRecipe);\n    //     setReciept({'data':JSON.parse(savedRecipes), 'loading': false})\n\n    //     }\n\n    //         const response =  fetch(url).then( response => response.json()).then(( response )=> \n    //         {\n    //             console.log(response);\n    //             if (response.ok && response.ok === 'false'){\n    //                 setReciept({'data' : 'failure', 'loading' : true})\n    //             }\n\n    //             else {\n    //                 localStorage.setItem('Recipes', JSON.stringify(response.recipes))\n    //                 setReciept({'data': response.recipes, 'loading': false})\n    //             }\n\n    //         })\n    //     }\n  }, [url]);\n  return data;\n}\n_s(useFetches, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\nexport default useFetches;","map":{"version":3,"names":["useState","useEffect","useFetches","url","savedRecipes","localStorage","getItem","data","console","log"],"sources":["/Users/user/Downloads/Projects/html,css,javascript/personal/-react/fragments/src/Utils/Fetches.js"],"sourcesContent":["import { useState, useEffect } from 'react'\n\nfunction useFetches({ url }) {\n//   const [reciept, setReciept] = useState({'data' : null, 'loading' : true})\n  const savedRecipes = localStorage.getItem(\"Recipes\");\n\nconst data = 'man';\n\n  useEffect( () =>  {       \n                        console.log(url + data);\n                        // if (savedRecipes) { \n                        //     const savedRecipe = JSON.parse(savedRecipes);\n                        //     console.log(savedRecipe);\n                        //     setReciept({'data':JSON.parse(savedRecipes), 'loading': false})\n                           \n                        //     }\n  \n                       \n                        //         const response =  fetch(url).then( response => response.json()).then(( response )=> \n                        //         {\n                        //             console.log(response);\n                        //             if (response.ok && response.ok === 'false'){\n                        //                 setReciept({'data' : 'failure', 'loading' : true})\n                        //             }\n\n                        //             else {\n                        //                 localStorage.setItem('Recipes', JSON.stringify(response.recipes))\n                        //                 setReciept({'data': response.recipes, 'loading': false})\n                        //             }\n\n                        //         })\n                        //     }\n    \n  }, [url])\n\n  return data;\n\n}\n\nexport default useFetches"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,SAASC,UAAU,OAAU;EAAA;EAAA,IAAT;IAAEC;EAAI,CAAC;EAC3B;EACE,MAAMC,YAAY,GAAGC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC;EAEtD,MAAMC,IAAI,GAAG,KAAK;EAEhBN,SAAS,CAAE,MAAO;IACIO,OAAO,CAACC,GAAG,CAACN,GAAG,GAAGI,IAAI,CAAC;IACvB;IACA;IACA;IACA;;IAEA;;IAGA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;;IAEA;IACA;EAEtB,CAAC,EAAE,CAACJ,GAAG,CAAC,CAAC;EAET,OAAOI,IAAI;AAEb;AAAC,GAnCQL,UAAU;AAqCnB,eAAeA,UAAU"},"metadata":{},"sourceType":"module"}