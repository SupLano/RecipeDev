{"ast":null,"code":"'use strict';\n\nconst serviceOptions = require('./common-options/service');\nconst awsServiceOptions = require('./common-options/aws-service');\nconst noServiceCommands = require('./no-service');\nconst commands = module.exports = new Map();\ncommands.commonOptions = serviceOptions;\ncommands.set('package', {\n  usage: 'Packages a Serverless service',\n  hasAwsExtension: true,\n  options: {\n    package: {\n      usage: 'Output path for the package',\n      shortcut: 'p'\n    }\n  },\n  lifecycleEvents: ['cleanup', 'initialize', 'setupProviderConfiguration', 'createDeploymentArtifacts', 'compileLayers', 'compileFunctions', 'compileEvents', 'finalize']\n});\ncommands.set('plugin install', {\n  usage: 'Install and add a plugin to your service',\n  options: {\n    name: {\n      usage: 'The plugin name',\n      required: true,\n      shortcut: 'n'\n    }\n  },\n  lifecycleEvents: ['install']\n});\ncommands.set('plugin uninstall', {\n  usage: 'Uninstall and remove a plugin from your service',\n  options: {\n    name: {\n      usage: 'The plugin name',\n      required: true,\n      shortcut: 'n'\n    }\n  },\n  lifecycleEvents: ['uninstall']\n});\ncommands.set('print', {\n  usage: 'Print your compiled and resolved config file',\n  hasAwsExtension: true,\n  options: {\n    format: {\n      usage: 'Print configuration in given format (\"yaml\", \"json\", \"text\"). Default: yaml'\n    },\n    path: {\n      usage: 'Optional period-separated path to print a sub-value (eg: \"provider.name\")'\n    },\n    transform: {\n      usage: 'Optional transform-function to apply to the value (\"keys\")'\n    }\n  },\n  lifecycleEvents: ['print']\n});\nfor (const schema of commands.values()) {\n  schema.serviceDependencyMode = 'required';\n  if (!schema.options) schema.options = {};\n  for (const optionSchema of Object.values(schema.options)) {\n    if (!optionSchema.type) optionSchema.type = 'string';\n  }\n  Object.assign(schema.options, schema.hasAwsExtension ? awsServiceOptions : serviceOptions);\n}\nfor (const [name, schema] of noServiceCommands) commands.set(name, schema);","map":{"version":3,"names":["serviceOptions","require","awsServiceOptions","noServiceCommands","commands","module","exports","Map","commonOptions","set","usage","hasAwsExtension","options","package","shortcut","lifecycleEvents","name","required","format","path","transform","schema","values","serviceDependencyMode","optionSchema","Object","type","assign"],"sources":["/Users/user/Downloads/node_modules/serverless/lib/cli/commands-schema/service.js"],"sourcesContent":["'use strict';\n\nconst serviceOptions = require('./common-options/service');\nconst awsServiceOptions = require('./common-options/aws-service');\nconst noServiceCommands = require('./no-service');\n\nconst commands = (module.exports = new Map());\n\ncommands.commonOptions = serviceOptions;\n\ncommands.set('package', {\n  usage: 'Packages a Serverless service',\n  hasAwsExtension: true,\n  options: {\n    package: {\n      usage: 'Output path for the package',\n      shortcut: 'p',\n    },\n  },\n  lifecycleEvents: [\n    'cleanup',\n    'initialize',\n    'setupProviderConfiguration',\n    'createDeploymentArtifacts',\n    'compileLayers',\n    'compileFunctions',\n    'compileEvents',\n    'finalize',\n  ],\n});\n\ncommands.set('plugin install', {\n  usage: 'Install and add a plugin to your service',\n  options: {\n    name: {\n      usage: 'The plugin name',\n      required: true,\n      shortcut: 'n',\n    },\n  },\n  lifecycleEvents: ['install'],\n});\n\ncommands.set('plugin uninstall', {\n  usage: 'Uninstall and remove a plugin from your service',\n  options: {\n    name: {\n      usage: 'The plugin name',\n      required: true,\n      shortcut: 'n',\n    },\n  },\n  lifecycleEvents: ['uninstall'],\n});\n\ncommands.set('print', {\n  usage: 'Print your compiled and resolved config file',\n  hasAwsExtension: true,\n  options: {\n    format: {\n      usage: 'Print configuration in given format (\"yaml\", \"json\", \"text\"). Default: yaml',\n    },\n    path: {\n      usage: 'Optional period-separated path to print a sub-value (eg: \"provider.name\")',\n    },\n    transform: {\n      usage: 'Optional transform-function to apply to the value (\"keys\")',\n    },\n  },\n  lifecycleEvents: ['print'],\n});\n\nfor (const schema of commands.values()) {\n  schema.serviceDependencyMode = 'required';\n  if (!schema.options) schema.options = {};\n  for (const optionSchema of Object.values(schema.options)) {\n    if (!optionSchema.type) optionSchema.type = 'string';\n  }\n  Object.assign(schema.options, schema.hasAwsExtension ? awsServiceOptions : serviceOptions);\n}\n\nfor (const [name, schema] of noServiceCommands) commands.set(name, schema);\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,cAAc,GAAGC,OAAO,CAAC,0BAA0B,CAAC;AAC1D,MAAMC,iBAAiB,GAAGD,OAAO,CAAC,8BAA8B,CAAC;AACjE,MAAME,iBAAiB,GAAGF,OAAO,CAAC,cAAc,CAAC;AAEjD,MAAMG,QAAQ,GAAIC,MAAM,CAACC,OAAO,GAAG,IAAIC,GAAG,EAAG;AAE7CH,QAAQ,CAACI,aAAa,GAAGR,cAAc;AAEvCI,QAAQ,CAACK,GAAG,CAAC,SAAS,EAAE;EACtBC,KAAK,EAAE,+BAA+B;EACtCC,eAAe,EAAE,IAAI;EACrBC,OAAO,EAAE;IACPC,OAAO,EAAE;MACPH,KAAK,EAAE,6BAA6B;MACpCI,QAAQ,EAAE;IACZ;EACF,CAAC;EACDC,eAAe,EAAE,CACf,SAAS,EACT,YAAY,EACZ,4BAA4B,EAC5B,2BAA2B,EAC3B,eAAe,EACf,kBAAkB,EAClB,eAAe,EACf,UAAU;AAEd,CAAC,CAAC;AAEFX,QAAQ,CAACK,GAAG,CAAC,gBAAgB,EAAE;EAC7BC,KAAK,EAAE,0CAA0C;EACjDE,OAAO,EAAE;IACPI,IAAI,EAAE;MACJN,KAAK,EAAE,iBAAiB;MACxBO,QAAQ,EAAE,IAAI;MACdH,QAAQ,EAAE;IACZ;EACF,CAAC;EACDC,eAAe,EAAE,CAAC,SAAS;AAC7B,CAAC,CAAC;AAEFX,QAAQ,CAACK,GAAG,CAAC,kBAAkB,EAAE;EAC/BC,KAAK,EAAE,iDAAiD;EACxDE,OAAO,EAAE;IACPI,IAAI,EAAE;MACJN,KAAK,EAAE,iBAAiB;MACxBO,QAAQ,EAAE,IAAI;MACdH,QAAQ,EAAE;IACZ;EACF,CAAC;EACDC,eAAe,EAAE,CAAC,WAAW;AAC/B,CAAC,CAAC;AAEFX,QAAQ,CAACK,GAAG,CAAC,OAAO,EAAE;EACpBC,KAAK,EAAE,8CAA8C;EACrDC,eAAe,EAAE,IAAI;EACrBC,OAAO,EAAE;IACPM,MAAM,EAAE;MACNR,KAAK,EAAE;IACT,CAAC;IACDS,IAAI,EAAE;MACJT,KAAK,EAAE;IACT,CAAC;IACDU,SAAS,EAAE;MACTV,KAAK,EAAE;IACT;EACF,CAAC;EACDK,eAAe,EAAE,CAAC,OAAO;AAC3B,CAAC,CAAC;AAEF,KAAK,MAAMM,MAAM,IAAIjB,QAAQ,CAACkB,MAAM,EAAE,EAAE;EACtCD,MAAM,CAACE,qBAAqB,GAAG,UAAU;EACzC,IAAI,CAACF,MAAM,CAACT,OAAO,EAAES,MAAM,CAACT,OAAO,GAAG,CAAC,CAAC;EACxC,KAAK,MAAMY,YAAY,IAAIC,MAAM,CAACH,MAAM,CAACD,MAAM,CAACT,OAAO,CAAC,EAAE;IACxD,IAAI,CAACY,YAAY,CAACE,IAAI,EAAEF,YAAY,CAACE,IAAI,GAAG,QAAQ;EACtD;EACAD,MAAM,CAACE,MAAM,CAACN,MAAM,CAACT,OAAO,EAAES,MAAM,CAACV,eAAe,GAAGT,iBAAiB,GAAGF,cAAc,CAAC;AAC5F;AAEA,KAAK,MAAM,CAACgB,IAAI,EAAEK,MAAM,CAAC,IAAIlB,iBAAiB,EAAEC,QAAQ,CAACK,GAAG,CAACO,IAAI,EAAEK,MAAM,CAAC"},"metadata":{},"sourceType":"script"}