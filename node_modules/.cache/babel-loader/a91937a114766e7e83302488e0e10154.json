{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Recipes() {\n  _s();\n  const [recipes, SetRecipes] = useState([]);\n  useEffect(() => {\n    FetchRecipes().then(result => {\n      SetRecipes(result);\n    });\n  }, []);\n  const FetchRecipes = async function () {\n    let response = await fetch(`https://api.spoonacular.com/recipes/random?&number=12&apiKey=`);\n    let result = await response.json();\n    return result;\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n_s(Recipes, \"M3+hgHZDLp1+DL8qiDidlGrCWlg=\");\n_c = Recipes;\nexport default Recipes;\nvar _c;\n$RefreshReg$(_c, \"Recipes\");","map":{"version":3,"names":["React","useEffect","useState","Recipes","recipes","SetRecipes","FetchRecipes","then","result","response","fetch","json"],"sources":["/Users/user/Downloads/Projects/html,css,javascript/personal/-react/fragments/src/Recipes.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\n\nfunction Recipes() {\n\n  const [recipes, SetRecipes] = useState([]);\n\n\n  useEffect( ()=> {\n     FetchRecipes().then( result => { SetRecipes(result)} );\n  }, [] )\n\n  const FetchRecipes = async function () {\n    let response = await fetch(`https://api.spoonacular.com/recipes/random?&number=12&apiKey=`);\n    let result = await response.json();\n    return result;\n  }\n\n\n\n  return (\n    <>\n      \n    </>\n  )\n}\n\nexport default Recipes"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAA;AAAA;AAElD,SAASC,OAAO,GAAG;EAAA;EAEjB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGH,QAAQ,CAAC,EAAE,CAAC;EAG1CD,SAAS,CAAE,MAAK;IACbK,YAAY,EAAE,CAACC,IAAI,CAAEC,MAAM,IAAI;MAAEH,UAAU,CAACG,MAAM,CAAC;IAAA,CAAC,CAAE;EACzD,CAAC,EAAE,EAAE,CAAE;EAEP,MAAMF,YAAY,GAAG,kBAAkB;IACrC,IAAIG,QAAQ,GAAG,MAAMC,KAAK,CAAE,+DAA8D,CAAC;IAC3F,IAAIF,MAAM,GAAG,MAAMC,QAAQ,CAACE,IAAI,EAAE;IAClC,OAAOH,MAAM;EACf,CAAC;EAID,oBACE,qCAEG;AAEP;AAAC,GAtBQL,OAAO;AAAA,KAAPA,OAAO;AAwBhB,eAAeA,OAAO;AAAA;AAAA"},"metadata":{},"sourceType":"module"}